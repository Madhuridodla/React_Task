{"version":3,"sources":["screens/login.jsx"],"names":["connect","LoginActionCreator","EmployeesListCreator","props","useState","username","password","errors","formData","setFormData","handleChange","e","target","value","name","Object","assign","className","htmlFor","type","id","placeholder","onChange","onClick","preventDefault","hasOwnProperty","isEmpty","validationMessages","PROVIDE_USERNAME","validateUsername","PROVIDE_VALID_USERNAME","PROVIDE_PASSWORD","validatePassword","PROVIDE_VALID_PASSWORD","isFormValid","keys","length","validateForm","localStorage","setItem","showSuccessToast","history","push","DashboardPageRoutes","EMPLOYEES_LIST","showErrorToast"],"mappings":"0MAiGeA,sBAAQ,KAAM,CAAEC,uBAAoBC,0BAApCF,EA5Ff,YAAwE,IAAvDC,EAAsD,EAAtDA,mBAAoBC,EAAkC,EAAlCA,qBAAyBC,EAAS,+DAErCC,mBAAS,CACvCC,SAAU,GACVC,SAAU,GACVC,OAAQ,KAL2D,mBAE9DC,EAF8D,KAEpDC,EAFoD,KAQ/DC,EAAe,SAACC,GAAO,IAAD,EACN,EAAhBA,EAAEC,OAAOC,MACXJ,EAAY,2BACPD,GADM,uBAERG,EAAEC,OAAOE,KAAOH,EAAEC,OAAOC,OAFjB,uBAGDE,OAAOC,OAAOR,EAASD,OAAvBQ,OAAA,IAAAA,CAAA,GAAkCJ,EAAEC,OAAOE,KAAO,MAHjD,KAMXL,EAAY,2BACPD,GADM,uBAERG,EAAEC,OAAOE,KAAO,IAFR,uBAGDC,OAAOC,OAAOR,EAASD,OAAvBQ,OAAA,IAAAA,CAAA,GAAkCJ,EAAEC,OAAOE,KAAO,gBAAkB,CAACH,EAAEC,OAAOE,SAH7E,MA+CTT,EAA+BG,EAA/BH,SAAUC,EAAqBE,EAArBF,SAAUC,EAAWC,EAAXD,OAC1B,OACE,yBAAKU,UAAU,aACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,sCACA,uBAAGA,UAAU,QAAb,2BAEF,yBAAKA,UAAU,gBACb,8BACE,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAOF,UAAWV,EAAOF,SAAW,2BAA6B,eAAgBe,GAAG,WAAWN,KAAK,WAAWO,YAAY,uBAAuBR,MAAOR,EAAUiB,SAAU,SAACX,GAAD,OAAOD,EAAaC,MAC7M,0BAAMM,UAAU,eAAeV,EAAOF,WAExC,yBAAKY,UAAU,cACb,2BAAOC,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWF,UAAWV,EAAOD,SAAW,2BAA6B,eAAgBc,GAAG,WAAWN,KAAK,WAAWO,YAAY,iBAAiBR,MAAOP,EAAUgB,SAAU,SAACX,GAAD,OAAOD,EAAaC,MAC3M,0BAAMM,UAAU,eAAeV,EAAOD,WAExC,4BAAQa,KAAK,SAASF,UAAU,kBAAkBM,QApCxC,SAACZ,GAEnB,GADAA,EAAEa,iBAzBiB,WAAO,IAClBnB,EAA+BG,EAA/BH,SAAUC,EAAqBE,EAArBF,SAAUC,EAAWC,EAAXD,OAExBC,EAASiB,eAAe,cACtBC,kBAAQrB,GAAWE,EAAOF,SAAWsB,IAAmBC,iBAClDC,YAAiBxB,UAEfE,EAAOF,SADjBE,EAAOF,SAAWsB,IAAmBG,wBAIrCtB,EAASiB,eAAe,cACtBC,kBAAQpB,GAAWC,EAAOD,SAAWqB,IAAmBI,iBAClDC,YAAiB1B,UAEfC,EAAOD,SADjBC,EAAOD,SAAWqB,IAAmBM,wBAGzC,IAAMC,EAA6C,IAA/BnB,OAAOoB,KAAK5B,GAAQ6B,OAKxC,OAJA3B,EAAY,2BACPD,GADM,IAETD,OAAQA,KAEH2B,EAKHG,GAAgB,CAAC,IACXhC,EAAuBG,EAAvBH,SAAUC,EAAaE,EAAbF,SAElB,GADgB,qBACZD,GADuC,cACbC,EAE5BL,EADU,CAAEI,SAFE,mBAEmBC,SAFQ,cAIzCJ,IACAoC,aAAaC,QAAQ,QAAQ,GAC7BC,YAAiB,kBACjBrC,EAAMsC,QAAQC,KAAKC,IAAoBC,qBAEpCC,YAAe,iEAuBd","file":"static/js/5.7a1fffe4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { validationMessages, LoginActionCreator, EmployeesListCreator } from '../redux/actions'\nimport { isEmpty } from 'lodash'\nimport { validateUsername, validatePassword, showErrorToast, showSuccessToast, DashboardPageRoutes } from '../utlis'\nfunction Login({ LoginActionCreator, EmployeesListCreator, ...props }) {\n  // variable declaration\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    errors: {}\n  })\n  // handle change\n  const handleChange = (e) => {\n    if (e.target.value) {\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value,\n        errors: Object.assign(formData.errors, { [e.target.name]: \"\" }),\n      });\n    } else\n      setFormData({\n        ...formData,\n        [e.target.name]: '',\n        errors: Object.assign(formData.errors, { [e.target.name]: \"Please enter \" + [e.target.name] })\n      });\n  };\n  // Form validation \n  const validateForm = () => {\n    const { username, password, errors } = formData;\n    //username\n    if (formData.hasOwnProperty(\"username\")) {\n      if (isEmpty(username)) errors.username = validationMessages.PROVIDE_USERNAME;\n      else if (!validateUsername(username))\n        errors.username = validationMessages.PROVIDE_VALID_USERNAME;\n      else delete errors.username;\n    }\n    //password\n    if (formData.hasOwnProperty(\"password\")) {\n      if (isEmpty(password)) errors.password = validationMessages.PROVIDE_PASSWORD;\n      else if (!validatePassword(password))\n        errors.password = validationMessages.PROVIDE_VALID_PASSWORD;\n      else delete errors.password;\n    }\n    const isFormValid = Object.keys(errors).length !== 0 ? false : true;\n    setFormData({\n      ...formData,\n      errors: errors,\n    });\n    return isFormValid;\n  }\n  // Form submit \n  const SubmitLogin = (e) => {\n    e.preventDefault()\n    if (validateForm()) {\n      const { username, password } = formData;\n      let user_name = \"hruday@gmail.com\", pass = \"hruday123\"\n      if (username === user_name && password === pass) {\n        let obj = { username: user_name, password: pass }\n        LoginActionCreator(obj)\n        EmployeesListCreator()\n        localStorage.setItem('auth', true)\n        showSuccessToast(\"Login success.\")\n        props.history.push(DashboardPageRoutes.EMPLOYEES_LIST)\n      }\n      else showErrorToast(\"Credentials does not match.please enter valid credentials.\")\n    }\n  }\n  let { username, password, errors } = formData;\n  return (\n    <div className=\"container\">\n      <div className=\"login-wrapper\">\n        <div className=\"title-header\">\n          <h2>Log In</h2>\n          <p className=\"pb-0\">Nice to see you again.</p>\n        </div>\n        <div className=\"form-wrapper\">\n          <form >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" className={errors.username ? \"form-control input-error\" : \"form-control\"} id=\"username\" name=\"username\" placeholder=\"Enter username/email\" value={username} onChange={(e) => handleChange(e)} />\n              <span className=\"text-danger\">{errors.username}</span>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" className={errors.password ? \"form-control input-error\" : \"form-control\"} id=\"password\" name=\"password\" placeholder=\"Enter password\" value={password} onChange={(e) => handleChange(e)} />\n              <span className=\"text-danger\">{errors.password}</span>\n            </div>\n            <button type=\"submit\" className=\"btn btn-success\" onClick={SubmitLogin}>Login</button>\n          </form>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\nexport default connect(null, { LoginActionCreator, EmployeesListCreator })(Login);"],"sourceRoot":""}